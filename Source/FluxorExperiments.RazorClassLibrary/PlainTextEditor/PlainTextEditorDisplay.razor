@using FluxorExperiments.ClassLibrary.Html
@using FluxorExperiments.ClassLibrary.PlainTextEditor
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="fe_plain-text-editor-display">
    <FluxorExperiments.RazorClassLibrary.Focus.FocusBoundaryDisplay @ref="_focusBoundaryDisplay">
        <h3>PlainTextEditorDisplay</h3>

        @if (IsDebugEnvironment)
        {
            <PlainTextEditorDebugDisplay PlainTextEditorState="PlainTextEditorState.Value"/>
        }

        <CascadingValue Value="PlainTextEditorState">
            @{
                var previousRowsColumnCounter = 0;

                for (var i = 0; i < PlainTextEditorState.Value.Count; i++)
                {
                    var rowIndex = i;
                    var plainTextRow = PlainTextEditorState.Value[rowIndex];

                    var localPreviousRowsColumnCounter = previousRowsColumnCounter;

                    <CascadingValue Name="@nameof(PlainTextEditorLineNumberDisplay.LargestLineNumberStringCount)"
                                    Value="@((int)Math.Log10(PlainTextEditorState.Value.Count + 1))">
                        <CascadingValue Name="@nameof(CharacterDisplay.RowIndex)"
                                        Value="rowIndex">
                            <CascadingValue Name="@nameof(CharacterDisplay.PreviousRowsColumnCount)"
                                            Value="localPreviousRowsColumnCounter">
                                <PlainTextRowDisplay @key="plainTextRow.SequenceKeyRecord" 
                                                     PlainTextRow="@plainTextRow"
                                                     PlainTextRowIndex="rowIndex" />
                            </CascadingValue>
                        </CascadingValue>
                    </CascadingValue>

                    for (int j = 0; j < plainTextRow.Count; j++)
                    {
                        previousRowsColumnCounter += plainTextRow[j].PlanTextLength;
                    }
                }
            }
        </CascadingValue>
    </FluxorExperiments.RazorClassLibrary.Focus.FocusBoundaryDisplay>
</div>